import org.apache.tools.ant.filters.ReplaceTokens

println System.getenv('MYSQL_PASSWORD')

buildscript {
	ext {
		kotlinVersion = '1.2.41'
		springBootVersion = '2.0.2.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
		classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
		classpath("org.jetbrains.kotlin:kotlin-noarg:${kotlinVersion}")
	}
}

apply plugin: 'kotlin'
apply plugin: "kotlin-allopen"
apply plugin: "kotlin-noarg"
apply plugin: 'kotlin-spring'
apply plugin: 'kotlin-jpa'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'front-end'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8
compileKotlin {
	kotlinOptions {
		freeCompilerArgs = ["-Xjsr305=strict"]
		jvmTarget = "1.8"
	}
}
compileTestKotlin {
	kotlinOptions {
		freeCompilerArgs = ["-Xjsr305=strict"]
		jvmTarget = "1.8"
	}
}

repositories {
	mavenCentral()
}

def mysqlDbHost = System.getenv('MYSQL_DB_HOST') ?: 'mysql'
def mysqlDbPort = System.getenv('MYSQL_DB_PORT') ?: '3306'
def mysqlDbName = System.getenv('MYSQL_DB_NAME') ?: 'mysqldb'
def mysqlUser = System.getenv('MYSQL_USER') ?: 'mysql'
def mysqlPassword = System.getenv('MYSQL_PASSWORD') ?: 'mysql'

processResources {
    filter(ReplaceTokens, tokens:[
            'MYSQL_DB_HOST': mysqlDbHost,
            'MYSQL_DB_PORT': mysqlDbPort,
            'MYSQL_DB_NAME': mysqlDbName,
            'MYSQL_USER': mysqlUser,
            'MYSQL_PASSWORD': mysqlPassword
    ])
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter-data-rest')
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('mysql:mysql-connector-java')
	compile('com.fasterxml.jackson.module:jackson-module-kotlin')
	compile("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
	compile("org.jetbrains.kotlin:kotlin-reflect")
	compile('com.github.paulcwarren:spring-content-fs-boot-starter:0.1.0')
	compile('com.github.paulcwarren:spring-content-rest-boot-starter:0.1.0')
	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile('com.h2database:h2')
}
