apiVersion: template.openshift.io/v1
kind: Template
labels:
  template: fabricstore
message: |-
  The following service(s) have been created in your project: ${FABRICSTORE_SERVICE_NAME}.

  Fabricstore is a template repository service that can be used with Zalando's Tailor service (see http://mosaic9.org).
  It offers a REST API (<SERVICE_URL>/templates), and a simple web UI (<SERVICE_URL>/admin.html).
metadata:
  annotations:
    description: |-
      Fabricstore is a template repository service that can be used with Zalando's Tailor service (see http://mosaic9.org).
      It offers a REST API (<SERVICE_URL>/templates), and a simple web UI (<SERVICE_URL>/admin.html).
    iconClass: icon-openjdk
    openshift.io/display-name: Fabricstore
    openshift.io/documentation-url: https://github.com/abadelt/fabricstore/
    tags: mosaic9,tailor,fabricstore
  name: fabricstore
objects:

- kind: ImageStream
  apiVersion: v1
  metadata:
    labels:
      app: ${FABRICSTORE_SERVICE_NAME}
    name: ${FABRICSTORE_SERVICE_NAME}
    annotations:
      openshift.io/display-name: fabricstore
  spec:
  tags:
  - name: '1.0'
    annotations:
      openshift.io/display-name: fabricstore 2.0
      description: >-
        Build and run Fabricstore applications on CentOS 7.
      iconClass: icon-openjdk
      tags: 'builder,java,fabricstore'
      supports: 'java'
      version: '1.0'

- kind: BuildConfig
  apiVersion: v1
  metadata:
    labels:
      app: ${FABRICSTORE_SERVICE_NAME}
    name: ${FABRICSTORE_SERVICE_NAME}
  spec:
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      git:
        uri: https://github.com/abadelt/fabricstore
      type: Git
    strategy:
      sourceStrategy:
        from:
          kind: ImageStreamTag
          name: s2i-java:latest
          namespace: frontend-sandbox
      type: Source
    output:
      to:
        kind: ImageStreamTag
        name: ${FABRICSTORE_SERVICE_NAME}:latest
    triggers:
    - type: ConfigChange
    - imageChange: {}
      type: ImageChange

- kind: DeploymentConfig
  apiVersion: v1
  metadata:
    labels:
      app: ${FABRICSTORE_SERVICE_NAME}
    name: ${FABRICSTORE_SERVICE_NAME}
  spec:
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      app: ${FABRICSTORE_SERVICE_NAME}
      deploymentconfig: ${FABRICSTORE_SERVICE_NAME}
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftNewApp
        creationTimestamp: null
        labels:
          app: ${FABRICSTORE_SERVICE_NAME}
          deploymentconfig: ${FABRICSTORE_SERVICE_NAME}
      spec:
        containers:
        - env:
          - name: MYSQL_DB_NAME
            valueFrom:
              secretKeyRef:
                key: database-name
                name: ${MYSQL_SERVICE_NAME}
          - name: MYSQL_USER
            valueFrom:
              secretKeyRef:
                key: database-user
                name: ${MYSQL_SERVICE_NAME}
          - name: MYSQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: database-password
                name: ${MYSQL_SERVICE_NAME}
          - name: MYSQL_DB_HOST
            value: ${MYSQL_SERVICE_NAME}
          - name: MYSQL_DB_PORT
            value: ${MYSQL_DB_PORT}
          image: docker-registry.default.svc:5000/${PROJECT}/${FABRICSTORE_SERVICE_NAME}
          imagePullPolicy: Always
          name: ${FABRICSTORE_SERVICE_NAME}
          ports:
          - containerPort: 8080
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - ${FABRICSTORE_SERVICE_NAME}
        from:
          kind: ImageStreamTag
          name: ${FABRICSTORE_SERVICE_NAME}:latest
          namespace: frontend-sandbox
      type: ImageChange

- kind: Service
  apiVersion: v1
  metadata:
    labels:
      app: ${FABRICSTORE_SERVICE_NAME}
    name: ${FABRICSTORE_SERVICE_NAME}
  spec:
    ports:
    - name: ${PORT}-tcp
      port: ${PORT}
      protocol: TCP
      targetPort: 8080
    selector:
      app: ${FABRICSTORE_SERVICE_NAME}
      deploymentconfig: ${FABRICSTORE_SERVICE_NAME}
    sessionAffinity: None
    type: ClusterIP

- kind: Route
  apiVersion: v1
  metadata:
    labels:
      app: ${FABRICSTORE_SERVICE_NAME}
    name: ${FABRICSTORE_SERVICE_NAME}
  spec:
    host: ${FABRICSTORE_SERVICE_NAME}-frontend-sandbox.apps.badelt.it
    port:
      targetPort: ${PORT}-tcp
    to:
      kind: Service
      name: ${FABRICSTORE_SERVICE_NAME}
      weight: 100
    wildcardPolicy: None

parameters:
- name: PROJECT
  displayName: Project (= namespace) name
  description: Name of the project in which the created resources and referenced ImageStreams reside.
  value: myproject
- description: The name of the OpenShift Service exposed for this application.
  displayName: Fabricstore Service Name
  name: FABRICSTORE_SERVICE_NAME
  required: true
  value: fabricstore
- name: PORT
  displayName: Fabricstore Port
  description: Port at which the Fabricstore service will be listening.
  value: "8080"
- name: MYSQL_SERVICE_NAME
  displayName: mysql service name
  description: Name of the required mysql DB service in Openshift. You can set this only, instead of all individual parameters host, port, user ...
  value: "mysql"
- name: MYSQL_DB_HOST
  displayName: mysql database host name
  description: name of host running the mysql DB
  value: "mysql"
- name: MYSQL_DB_PORT
  displayName: mysql database port
  description: port the mysql DB is listening on
  value: "3306"
- name: MYSQL_DB_NAME
  displayName: mysql database name
  description: database name of the mysql DB used by Fabricstore
  value: "mysqldb"
- name: MYSQL_USER
  displayName: mysql database user name
  description: user name to access the mysql DB
  value: "mysql"
- name: MYSQL_PASSWORD
  displayName: mysql database password
  description: password to access the mysql DB
  value: "mysql"
